#!/usr/bin/env node

var path = require('path');
var fs = require('fs');

// Include the main application.
var proxy = require('../lib/server.js');
var logger = proxy.logger;


// If a config file is specified or is included in the project's directory,
// override the defaults with values from that file.
var confPath = process.argv[2] || path.join(__dirname, '..', 'config.yaml');

fs.exists(confPath, function(exists) {
  if (!exists) {
    confPath = undefined;
  }
  proxy.configure(confPath, function() {
    proxy.start(function() {
    });
  });
});

var shutdownHandler = function() {
  logger.info('Stop signal received, shutting down.');
  process.removeListener('SIGINT', shutdownHandler);
  process.on('SIGINT', function() {
    logger.error('Forcing shutdown without completing graceful shutdown.');
    process.exit(1);
  });
  proxy.stop(function() {
    logger.info('Graceful shutdown complete.');
    process.exit(0);
  });
  setTimeout(function() {
    logger.error('Graceful shutdown timed out.');
    process.exit(1);
  }, 500);
};
process.on('SIGINT', shutdownHandler);

process.on('SIGHUP', function() {
  logger.error('No handler is setup for SIGHUP at this time');
  process.exit(1);
});
